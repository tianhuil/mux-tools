[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mux-tools"
version = "0.1.0"
description = "A tmux session and window management utility built with Python 3.10+ and libtmux"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Your Name", email = "your.email@example.com" }]
keywords = ["python", "tools", "utilities", "development", "workflow"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Topic :: System :: Systems Administration",
    "Operating System :: OS Independent",
]

dependencies = [
    "libtmux>=0.46.2",
    "rich>=13.0.0",
    "click>=8.0.0",
    "click-aliases>=1.0.1",
    "pydantic>=2.0.0",
    "pyyaml>=6.0",
    "coolname>=2.2.0",
    "dagger-io>=0.9.0",
]

[project.scripts]
mux = "mux.main:main"
m = "mux.main:main"
tree = "tree.main:main"
t = "tree.main:main"

[project.optional-dependencies]
test = ["pytest>=7.0.0", "pytest-cov>=4.0.0", "pytest-mock>=3.10.0"]

docs = ["sphinx>=7.0.0", "sphinx-rtd-theme>=1.3.0", "myst-parser>=2.0.0"]

cli = ["rich>=13.0.0"]

[project.urls]
Homepage = "https://github.com/tianhuil/mux-tools"
Repository = "https://github.com/tianhuil/mux-tools"
Documentation = "https://mux-tools.readthedocs.io"
"Bug Tracker" = "https://github.com/tianhuil/mux-tools/issues"
"Changelog" = "https://github.com/tianhuil/mux-tools/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/mux", "src/tree"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/README.md",
    "/LICENSE",
    "/CHANGELOG.md",
    "/pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mux"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Documentation build configuration
[tool.sphinx]
project = "mux-tools"
version = "0.1.0"
release = "0.1.0"
html_theme = "sphinx_rtd_theme"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.17.1",
    "types-pyyaml>=6.0.12.20250809",
    "pre-commit>=3.0.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
